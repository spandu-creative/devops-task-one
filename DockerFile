# Stage 1: Build Stage
# Use an official Node.js runtime as a base image
FROM node:20-alpine AS builder

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json to install dependencies
# We copy these first to leverage Docker's caching, only re-running 'npm install'
# if the package files change.
COPY package*.json ./

# Install application dependencies
RUN npm install --only=production

# Copy the rest of the application code
COPY . .

# Stage 2: Production/Runtime Stage
# Use a lean base image for the final production environment
FROM node:20-alpine

# Set the working directory
WORKDIR /usr/src/app

# Copy the dependencies and application code from the builder stage
COPY --from=builder /app .

# Expose the port the app runs on (default is 3000 in your app.js)
EXPOSE 3000

# Define the command to run your app
CMD ["node", "app.js"]